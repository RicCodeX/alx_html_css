///////////////////////////////////////////////HTML///////////////////////////////////////////////////////////

HTML, HyperText Markup Language, gives content structure and meaning by defining that content as, for example, headings, paragraphs, or images.
CSS, or Cascading Style Sheets, is a presentation language created to style the appearance of content—using, for example, fonts or colors.
The two languages—HTML and CSS—are independent of one another and should remain that way. 
CSS should not be written inside of an HTML document and vice versa. As a rule, HTML will always represent content, and CSS will always represent the appearance of that content.

Elements(<a>, <h1>, <p>), tags(<a>...</a>, <h1>...</h1>, <p>...</p>), and attributes(href="" in <a href="http://shayhowe.com/">Shay Howe</a>, id="...", src="...", class="...") are the major HTML terms

Self-Closing Elements <br>, <embed>, <hr>, <img>, <input>, <link>, <meta>, <param>, <source>, <wbr>

Comments in html is <!-- -->
<br> is to break sessions
<p></p> is for a paragraph
<a></a> anchor is to add hyperlinks
    it normally contains attributes "href" for adding the hyperlinks

<ul></ul>  is for unordered lists
<ol></ol> is the ordered lists
<li></li> is the lists element that goes into the ul or ol tags

<table></table> is to create a table, this covers every other elements of the table listed below
<thead> is the block of row for the header
<th> data cell in a table header
<tbody> is the block of row for the table body
<tr> row of cell in a table
<td> data cell in a table
<tfoot> is the block of row for the table footer

<sup></sup> is for raised to power or superscript
<sub></sub> is for subscript

Linking
    href="https://www.google.com" takes you to another website from your website
    href="#DATA" takes you to a section called DATA in current webpage




///////////////////////////////////////////////CSS///////////////////////////////////////////////

The most common CSS terms are selectors, properties, values.

A selector designates exactly which element or elements within our HTML to target and apply styles 
    (such as color, size, and position) to e.g p { ... } which argets all paragraph element in the html

Property determines the styles that will be applied to that element. Property names fall after a selector, 
    within the curly brackets, {}, and immediately preceding a colon, :. There are numerous properties we can use, 
    such as background, color, font-size, height, and width, and new properties are often added. 
    e.g 
    p {
      color: ...;
      font-size: ...;
    } to all the paragraphs in the html

Now we can determine the behavior of that property with a value. 
    Values can be identified as the text between the colon, :, and semicolon, ;.
    e.g 
    p {
      color: orange;
      font-size: 16px;
    }

Class selector(.)
    .awesome { ... }

    <div class="awesome">...</div>
    <p class="awesome">...</p>

Type selector(div, p, h1, ...)
    div { ... }

    <div>...</div>          
    <div>...</div>

ID selector(#)
Regardless of which type of element they appear on, id attribute values can only be used once per page.
    #shayhowe { ... }

    <div id="shayhowe">...</div>

Referencing CSS
    In order to get our CSS talking to our HTML, we need to reference our CSS file within our HTML. 
    The best practice for referencing our CSS is to include all of our styles in a single external style sheet, 
    which is referenced from within the <head> element of our HTML document. 
    Using a single external style sheet allows us to use the same styles across an entire website and 
    quickly make changes sitewide.
<link> used to define the relationship between the HTML file and the CSS file.
    <link rel="stylesheet" href="main.css">

Using CSS Resets
    Every web browser has its own default styles for different elements. 
    How Google Chrome renders headings, paragraphs, lists, and so forth may be different from how Internet Explorer does. 
    To ensure cross-browser compatibility, CSS resets have become widely used.

Comments within HTML & CSS
    Comments help keep our files organized, allow us to set reminders, 
    and provide a way for us to more effectively manage our code. 
    Comments become especially useful when there are multiple people 
    working on the same files.
    HTML comments start with <!-- and end with -->.
    CSS comments start with /* and end with */.

Block-level elements
    <div class="social">
        <p>I may be found on...</p>
        <p>Additionally, I have a profile on...</p>
    </div>

Inline-level elements
    <p>Soon we'll be <span class="tooltip">writing HTML</span> with the best of them.</p>

Deciding Between <article>, <section>, or <div> Elements
    Both the <article> and <section> elements contribute to a document’s structure and help to outline a document. 
    If the content is being grouped solely for styling purposes and doesn’t provide value to the outline of a document, use the <div> element.
    If the content adds to the document outline and it can be independently redistributed or syndicated, use the <article> element.
    If the content adds to the document outline and represents a thematic group of content, use the <section> element.

